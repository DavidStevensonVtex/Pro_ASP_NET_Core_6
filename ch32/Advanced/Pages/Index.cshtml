@page "/pages"
@model IndexModel

<h4 class="bg-primary text-white text-center p-2">People</h4>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>ID</th><th>Name</th><th>Dept</th><th>Location</th>
        </tr>
    </thead>
    <tbody>
        @foreach ( Person p in Model.People )
        {
            <tr class="@Model.GetClass(p.Location?.City)">
                <td>@p.PersonId</td>
                <td>@p.Surname, @p.Firstname</td>
                <td>@p.Department?.Name</td>
                <td>@p.Location?.City, @p.Location?.State</td>
            </tr>
        }
    </tbody>
</table>

<form asp-page="Index" method="get">
    <div class="form-group">
        <div class="form-group">
            <label for="selectedCity" class="form-control">
                <option disabled selected>Select City</option>
                @foreach ( string city in Model.Cities)
                {
                    <option selected="@(city == Model.SelectedCity)"> @city </option>
                }
            </label>
        </div>
    </div>
    <button class="btn btn-primary mt-2" type="submit">Select</button>
</form>


@functions {
    public class IndexModel : PageModel
    {
        private DataContext context;

        public IndexModel(DataContext dbContext)
        {
            context = dbContext;
        }

        public IEnumerable<Person> People { get set; } = Enumerable.Empty<Person>();

        public IEnumerable<string> Cities { get; set; } = Enumerable.Empty<string>();

        [FromQuery]
        public string SelectedCity { get; set; } = String.Empty;

        public void OnGet()
        {
            People = context.People.Include(p => p.Department).Include(p => p.Location);
            Cities = context.Locations.Select(l => l.City).Distinct();
        }

        public string GetClass(string? city) =>
            SelectedCity == city ? "bg-info text-white" : "";
    }
}